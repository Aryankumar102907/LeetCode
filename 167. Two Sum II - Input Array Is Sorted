class Solution {
public:
    vector<int> twoSum(vector<int>& nums, int target) {
        unordered_map<int, int> hash;
        vector<int> ans;
        for (int i = 0; i < nums.size(); i++)
        {
            hash[nums[i]] = i + 1; // i + 1 or i
        }
        for (int i = 0; i < nums.size(); i++)
        {
            int complement = target - nums[i];
            if (hash.find(complement) != hash.end() && hash[complement] != i)
            {
                return {i + 1, hash[complement]}; // i + 1 or {i + 1, hash[complement] + 1}
            }
        }
        // If no valid pair is found, return an empty vector
        return ans;
    }
};
