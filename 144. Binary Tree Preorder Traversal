/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */

//this implementation take takes less space:
class Solution {
public:
    vector<int> result;
    void preorder(TreeNode* root)
    {
        if(root != NULL)
        {
            result.push_back(root->val);
            preorder(root->left);
            preorder(root-> right);
        }
    }
    vector<int> preorderTraversal(TreeNode* root) {
    preorder(root);
    return result;
    }
};
=======================================================
//Alternate solution:
class Solution {
public:
    vector<int> preorderTraversal(TreeNode* root) {
        vector<int> answer;
        preorder(root, answer);
        return answer;
    }
private:
    void preorder(TreeNode* root, vector<int>& answer) {
        if (root != NULL) {
            answer.push_back(root->val);        
            preorder(root->left, answer);
            preorder(root->right, answer);
        }
    }
};
