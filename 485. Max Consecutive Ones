class Solution {
public:
    int findMaxConsecutiveOnes(vector<int>& nums) {
        vector<int> memory;
        int count = 0;
        for(int i = 0; i < nums.size(); i++)
        {
            if(nums[i] == 1)
            {
                count++;
            }
            else
            {
                memory.push_back(count);
                count = 0;
            }
        }
        memory.push_back(count);
        return *max_element(memory.begin(), memory.end());
    }
};

//Less space complexity @Debo
class Solution {
public:
    int findMaxConsecutiveOnes(vector<int>& nums) {
        int count = 0, max = 0;
        for(int i = 0; i < nums.size(); i++)
        {
            if(nums[i] == 1)
            {
                count++;
                if(max < count)
                {
                    max = count;
                }
            }
            else
            {
                count = 0;
            }
        }
        return max;
    }
};
