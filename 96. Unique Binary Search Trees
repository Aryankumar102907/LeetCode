//Brute Force
class Solution {
public:
    // Function to calculate the nth Catalan number without overflow
    unsigned long long int numTrees(int n) {
        // Special case for n = 0
        if (n == 0) return 1;

        // Initialize result as 1
        unsigned long long int result = 1;

        // Calculate Catalan number iteratively
        for (int i = 0; i < n; i++) {
            result = result * (2 * n - i) / (i + 1); // Divide step-by-step
        }

        // Divide result by (n + 1)
        result /= (n + 1);

        return result;
    }
};


//One liner factorial : return (n==1 || n==0) ? 1: n * factorial(n - 1);  

=================================================================================
Dynamic Programming left!
